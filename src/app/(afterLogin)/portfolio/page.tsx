"use client";

import { useState } from "react";
import { useCurrencyStore } from "@/app/store/currency.ts";
import {
    ArrowLeftRight,
    MessageCircle,
    Plus,
    Sparkle,
    Trash2,
} from "lucide-react";

// Ïã§Ï†ú ÌôòÍ≤ΩÏóêÏÑúÎäî APIÏóêÏÑú Í∞ÄÏ†∏ÏôÄÏïº ÌïòÎäî ÌôòÏú® Îç∞Ïù¥ÌÑ∞
const exchangeRates = {
    "üá∫üá∏ USD": 1,
    "üá∞üá∑ KRW": 1344.5,
    "üá™üá∫ EUR": 0.92,
    "üá¨üáß GBP": 0.79,
    "üáØüáµ JPY": 151.62,
    "üá®üá¶ CAD": 1.35,
    "üá¶üá∫ AUD": 1.52,
    "üá®üá≥ CNY": 7.24,
    "üá®üá≠ CHF": 0.89,
    "üáÆüá≥ INR": 83.35,
    "üá∏üá¨ SGD": 1.34,
};

// ÌÜµÌôîÎ≥Ñ Ïã¨Î≥º Îß§Ìïë
const currencySymbols = {
    "üá∫üá∏ USD": "$",
    "üá∞üá∑ KRW": "‚Ç©",
    "üá™üá∫ EUR": "‚Ç¨",
    "üá¨üáß GBP": "¬£",
    "üáØüáµ JPY": "¬•",
    "üá®üá¶ CAD": "C$",
    "üá¶üá∫ AUD": "A$",
    "üá®üá≥ CNY": "¬•",
    "üá®üá≠ CHF": "CHF",
    "üáÆüá≥ INR": "‚Çπ",
    "üá∏üá¨ SGD": "S$",
};

export default function PortfolioTable() {
    const [selectedItems, setSelectedItems] = useState([]);
    const [openDropdownId, setOpenDropdownId] = useState(null);
    const { selectedCurrency, currencies, setCurrency } = useCurrencyStore();
    const [showAIAdvice, setShowAIAdvice] = useState(false);

    // Í≥ÑÏ¢å Î™©Î°ù Î∞è ÏÑ†ÌÉùÎêú Í≥ÑÏ¢å ÏÉÅÌÉú
    const [accounts, setAccounts] = useState([
        { id: 0, name: "Í≥ÑÏ¢å Ìï©Í≥Ñ" },
        { id: 1, name: "Í≥ÑÏ¢å1" },
        { id: 2, name: "Í≥ÑÏ¢å2" },
    ]);
    const [selectedAccount, setSelectedAccount] = useState(accounts[0].id);

    // ÏÉòÌîå Ìè¨Ìä∏Ìè¥Î¶¨Ïò§ Îç∞Ïù¥ÌÑ∞ (Íµ¨Îß§ ÌÜµÌôî Ï†ïÎ≥¥ Ìè¨Ìï®)
    const tableData = [
        {
            id: 1,
            name: "Apple Inc",
            symbol: "AAPL",
            logo: "https://upload.wikimedia.org/wikipedia/commons/f/fa/Apple_logo_black.svg",
            quantity: 10,
            purchasePrice: 243.04,
            purchaseCurrency: "üá∫üá∏ USD",
            totalPurchase: 2430.4,
            currentPrice: 2428.4,
            dividend: 10.0,
            dividendYield: 0.41,
            totalProfit: -2.0,
            dailyProfit: -2.0,
        },
        {
            id: 2,
            name: "Tesla, Inc",
            symbol: "TSLA",
            logo: "https://upload.wikimedia.org/wikipedia/commons/thumb/b/bb/Tesla_T_symbol.svg/1920px-Tesla_T_symbol.svg.png",
            quantity: 10,
            purchasePrice: 350.0,
            purchaseCurrency: "üá∫üá∏ USD",
            totalPurchase: 3500.0,
            currentPrice: 3892.2,
            dividend: 0.0,
            dividendYield: 0,
            totalProfit: 392.2,
            dailyProfit: 197.3,
        },
    ];

    // ÌÜµÌôî Î≥ÄÌôò Ìï®Ïàò
    const convertAmount = (
        amount: number,
        fromCurrency: string,
        toCurrency: string
    ) => {
        const baseAmount = amount / exchangeRates[fromCurrency];
        return baseAmount * exchangeRates[toCurrency];
    };

    // ÌÜµÌôî ÌòïÏãù ÏßÄÏ†ï Ìï®Ïàò
    const formatCurrency = (amount: number, currency: string) => {
        const symbol = currencySymbols[currency];
        const formattedAmount = new Intl.NumberFormat("en-US", {
            minimumFractionDigits: 2,
            maximumFractionDigits: 2,
        }).format(amount);
        return `${symbol}${formattedAmount}`;
    };

    // Ìë∏ÌÑ∞Ïóê ÌëúÏãúÎê† Ï¥ùÍ≥Ñ Í≥ÑÏÇ∞ (ÌÜµÌôî Î≥ÄÌôò Ìè¨Ìï®)
    const totals = tableData.reduce(
        (acc, item) => {
            const convertedPurchase = convertAmount(
                item.totalPurchase,
                item.purchaseCurrency,
                selectedCurrency
            );
            const convertedCurrent = convertAmount(
                item.currentPrice,
                item.purchaseCurrency,
                selectedCurrency
            );
            const convertedDividend = convertAmount(
                item.dividend,
                item.purchaseCurrency,
                selectedCurrency
            );
            const convertedTotalProfit = convertAmount(
                item.totalProfit,
                item.purchaseCurrency,
                selectedCurrency
            );
            const convertedDailyProfit = convertAmount(
                item.dailyProfit,
                item.purchaseCurrency,
                selectedCurrency
            );

            return {
                quantity: acc.quantity + item.quantity,
                totalPurchase: acc.totalPurchase + convertedPurchase,
                currentPrice: acc.currentPrice + convertedCurrent,
                dividend: acc.dividend + convertedDividend,
                dividendYield:
                    acc.dividendYield +
                    (item.dividendYield * convertedPurchase) / 100,
                totalProfit: acc.totalProfit + convertedTotalProfit,
                dailyProfit: acc.dailyProfit + convertedDailyProfit,
            };
        },
        {
            quantity: 0,
            totalPurchase: 0,
            currentPrice: 0,
            dividend: 0,
            dividendYield: 0,
            totalProfit: 0,
            dailyProfit: 0,
        }
    );

    // ÎìúÎ°≠Îã§Ïö¥ ÌÜ†Í∏Ä Ìï®Ïàò
    const toggleDropdown = (id) => {
        setOpenDropdownId(openDropdownId === id ? null : id);
    };

    // ÎìúÎ°≠Îã§Ïö¥ Ïô∏Î∂Ä ÌÅ¥Î¶≠ Ï≤òÎ¶¨
    const handleClickOutside = () => {
        setOpenDropdownId(null);
    };

    // ÎìúÎ°≠Îã§Ïö¥ Î©îÎâ¥ Ïï°ÏÖò Ï≤òÎ¶¨
    const handleMenuAction = (action, itemId) => {
        switch (action) {
            case "add":
                console.log("Í±∞Îûò Ï∂îÍ∞Ä:", itemId);
                break;
            case "transfer":
                console.log("Ï†ÑÏÜ°:", itemId);
                break;
            case "delete":
                console.log("ÏÇ≠Ï†ú:", itemId);
                break;
        }
        setOpenDropdownId(null);
    };

    const handleDelete = () => {
        console.log("Delete items:", selectedItems);
        setSelectedItems([]);
    };

    const handleTransfer = () => {
        console.log("Transfer items:", selectedItems);
        setSelectedItems([]);
    };

    // AI Ï°∞Ïñ∏ ÏÉùÏÑ± Ìï®Ïàò
    const generateAIAdvice = () => {
        const totalValue = totals.currentPrice;
        const totalProfit = totals.totalProfit;
        const profitPercentage =
            (totalProfit / (totalValue - totalProfit)) * 100;

        if (profitPercentage < 0) {
            return "Ìè¨Ìä∏Ìè¥Î¶¨Ïò§Ïùò ÏàòÏùµÎ•†Ïù¥ ÎßàÏù¥ÎÑàÏä§Î•º Í∏∞Î°ùÌïòÍ≥† ÏûàÏäµÎãàÎã§. ÌòÑÏû¨ Î≥¥Ïú† Ï§ëÏù∏ Ï£ºÏãùÎì§Ïùò Ïã§Ï†ÅÍ≥º Ï†ÑÎßùÏùÑ Ïû¨Í≤ÄÌÜ†ÌïòÍ≥†, Î∂ÑÏÇ∞ Ìà¨ÏûêÎ•º ÌÜµÌï¥ Î¶¨Ïä§ÌÅ¨Î•º Í¥ÄÎ¶¨ÌïòÎäî Í≤ÉÏùÑ Ï∂îÏ≤úÎìúÎ¶ΩÎãàÎã§.";
        } else if (profitPercentage < 5) {
            return "ÏïàÏ†ïÏ†ÅÏù∏ ÏàòÏùµÎ•†ÏùÑ Î≥¥Ïù¥Í≥† ÏûàÏßÄÎßå, Î∞∞ÎãπÏ£º ÎπÑÏ§ëÏùÑ ÎÜíÏó¨ Ï†ïÍ∏∞Ï†ÅÏù∏ ÏàòÏùµÏùÑ ÌôïÎ≥¥ÌïòÎäî Í≤ÉÏùÑ Í≥†Î†§Ìï¥Î≥¥ÏÑ∏Ïöî.";
        } else {
            return "ÌõåÎ•≠Ìïú Ìè¨Ìä∏Ìè¥Î¶¨Ïò§ Ïö¥Ïö©ÏùÑ ÌïòÍ≥† Í≥ÑÏã≠ÎãàÎã§! ÏßÄÏÜçÏ†ÅÏù∏ Î™®ÎãàÌÑ∞ÎßÅÍ≥º Ìï®Íªò Ï†ïÍ∏∞Ï†ÅÏù∏ Î¶¨Î∞∏Îü∞Ïã±ÏùÑ ÌÜµÌï¥ ÏàòÏùµÏùÑ Í¥ÄÎ¶¨ÌïòÏÑ∏Ïöî.";
        }
    };

    // ÌèâÍ∑† Î∞∞Îãπ ÏàòÏùµÎ•† Í≥ÑÏÇ∞
    totals.dividendYield = (totals.dividend / totals.totalPurchase) * 100;

    return (
        <div>
            <div className="flex justify-between items-center mb-4">
                <div className="flex items-center gap-6">
                    {/* Í≥ÑÏ¢å ÏÑ†ÌÉù Î≤ÑÌäº Í∑∏Î£π */}
                    <div className="bg-slate-100 rounded-[0.5rem] p-1 drop-shadow-sm">
                        <div className="flex space-x-1">
                            {accounts.map((account) => (
                                <button
                                    key={account.id}
                                    onClick={() =>
                                        setSelectedAccount(account.id)
                                    }
                                    className={`px-3 py-2 rounded-[0.5rem] text-sm font-medium transition-all ${
                                        selectedAccount === account.id
                                            ? "bg-white text-slate-900"
                                            : "text-slate-400 hover:bg-slate-100"
                                    }`}
                                >
                                    {account.name}
                                </button>
                            ))}
                        </div>
                    </div>
                    {/* Í≥ÑÏ¢å Í¥ÄÎ¶¨ Î≤ÑÌäº */}
                    <button className="bg-[#e1f0ff] hover:bg-[#3699ff] text-[#3699ff] hover:text-white flex justify-center items-center gap-2 px-3.5 py-2 text-sm rounded-[0.5rem] transition-all">
                        <svg
                            xmlns="http://www.w3.org/2000/svg"
                            fill="currentColor"
                            height="14"
                            width="14"
                            viewBox="0 0 489.8 489.8"
                        >
                            <g>
                                <g>
                                    <g>
                                        <path
                                            d="M469.1,182.95h-38.2c-3.1-8.3-6.2-16.6-10.3-23.8l26.9-26.9c8.3-8.2,8.3-20.6,0-28.9l-60-60c-8.2-8.3-20.6-8.3-28.9,0
                        l-27.9,27.9c-7.2-3.1-15.5-6.2-22.7-9.3v-39.3c0-11.4-9.3-20.7-20.7-20.7h-84.8c-11.4,0-20.7,9.3-20.7,20.7v37.1
                        c-8.2,3.1-15.5,6.2-22.7,9.3l-27.9-27.9c-8.2-8.3-20.6-8.3-28.9,0l-60,60c-8.3,8.2-8.3,20.6,0,28.9l26.9,26.9
                        c-4.1,8.3-7.2,15.5-10.3,23.8H20.7c-11.4,0-20.7,9.3-20.7,20.7v84.8c0,11.4,9.3,20.7,20.7,20.7h35.1c3.1,8.3,6.2,16.5,10.3,24.8
                        l-25.8,25.8c-4.1,4.1-11.6,16.3,0,28.9l60,60c8.2,8.3,20.6,8.3,28.9,0l24.8-24.8c8.2,5.2,16.5,8.3,25.8,11.4v34.1
                        c0,11.4,9.3,20.7,20.7,20.7h84.8c11.4,0,20.7-9.3,19.7-18.5v-34.1c8.2-3.1,17.5-7.3,25.8-11.4l24.8,24.8c8.2,8.3,20.6,8.3,28.9,0
                        l60-60c8.3-8.2,8.3-20.6,0-28.9l-25.8-25.8c4.1-8.3,7.2-16.5,10.3-24.8h40.1c11.4,0,20.7-9.3,20.7-20.7v-84.8
                        C489.8,192.25,480.5,182.95,469.1,182.95z M445.6,266.75h-31c-9.3,0-17.5,6.2-19.6,15.5c-4.2,15.5-9.3,30-17.6,43.4
                        c-5.2,8.3-3.1,18.6,3.1,24.8l21.7,21.7l-31,31l-20.7-20.7c-6.2-7.2-16.5-8.3-24.8-3.1c-14.5,8.3-29,14.5-44.5,18.6
                        c-9.3,2-15.5,10.3-15.5,19.6v30h-44.5v-0.1h-1v-30c0-9.3-6.2-17.5-15.5-19.6c-15.6-4.1-31.1-10.3-44.5-18.6
                        c-8.3-5.2-18.6-3.1-24.8,3.1l-20.7,20.7l-31-31l21.7-21.7c6.2-7.2,8.3-16.5,3.1-24.8c-8.3-13.4-14.5-27.9-17.6-43.4
                        c-2-9.3-10.3-15.5-19.6-15.5h-31v-44.5h33.1c9.3,0,17.5-6.2,19.6-15.5c3.1-14.5,9.3-28,17.6-41.4c5.2-8.3,3.1-18.6-3.1-24.8
                        l-23.8-23.8l31-31l23.8,23.8c7.2,6.2,16.5,8.3,24.8,3.1c13.5-7.2,26.9-13.4,41.4-16.5c9.3-2,15.5-10.3,15.5-19.6v-34.1h44.5v35.2
                        c0,9.3,6.2,17.5,15.5,19.6c14.5,3.1,29,9.3,41.4,16.5c8.3,5.2,18.6,3.1,24.8-3.1l24.8-24.8l31,31l-23.8,23.8
                        c-7.2,6.2-8.3,16.5-3.1,24.8c7.3,12.5,13.5,26.9,17.6,41.4c2,9.3,10.3,15.5,19.6,15.5h33.1V266.75z"
                                        />
                                        <path
                                            d="M242.9,132.25c-62,0-112.7,50.7-112.7,112.7s50.7,112.7,112.7,112.7c62.1,0,112.7-50.7,112.7-112.7
                        S304.9,132.25,242.9,132.25z M242.9,317.35c-39.3,0-72.4-32.1-72.4-72.4c0-39.3,32.1-72.4,72.4-72.4c40.3,0,72.4,32.1,72.4,72.4
                        C315.3,284.25,282.2,317.35,242.9,317.35z"
                                        />
                                    </g>
                                </g>
                            </g>
                        </svg>
                        Í≥ÑÏ¢å Í¥ÄÎ¶¨
                    </button>
                </div>
                {/* Ìà¨Ïûê Ï∂îÍ∞Ä Î≤ÑÌäº */}
                <button className="bg-white hover:bg-slate-100 text-slate-700 flex justify-center items-center gap-2 px-3.5 py-2 text-sm rounded-[0.5rem] transition-all drop-shadow-sm">
                    <svg width="24" height="24" viewBox="0 0 24 24">
                        <circle
                            fill="currentColor"
                            opacity="0.3"
                            cx="12"
                            cy="12"
                            r="10"
                        ></circle>
                        <path
                            d="M11,11 L11,7 C11,6.44771525 11.4477153,6 12,6 C12.5522847,6 13,6.44771525 13,7 L13,11 L17,11 C17.5522847,11 18,11.4477153 18,12 C18,12.5522847 17.5522847,13 17,13 L13,13 L13,17 C13,17.5522847 12.5522847,18 12,18 C11.4477153,18 11,17.5522847 11,17 L11,13 L7,13 C6.44771525,13 6,12.5522847 6,12 C6,11.4477153 6.44771525,11 7,11 L11,11 Z"
                            fill="currentColor"
                        ></path>
                    </svg>
                    Ìà¨Ïûê Ï∂îÍ∞Ä
                </button>
            </div>
            {/* Ìè¨Ìä∏Ìè¥Î¶¨Ïò§ ÌÖåÏù¥Î∏î */}
            <div className="p-10 bg-white rounded-2xl drop-shadow-xl">
                {/* ÏÑ†ÌÉù ÏûëÏóÖ Î≤ÑÌäº ÏòÅÏó≠ */}
                <div
                    className={`transform transition-all duration-300 ease-out ${
                        selectedItems.length > 0
                            ? "opacity-100 translate-y-0 mb-8"
                            : "opacity-0 -translate-y-4 mb-0 invisible h-0"
                    }`}
                >
                    <div className="flex items-center gap-2">
                        <button
                            onClick={handleDelete}
                            className="bg-[#FFE2E5] hover:bg-[#F64E60] text-[#f64e60] hover:text-white flex justify-center items-center gap-2 px-3.5 py-2 text-sm rounded-[0.5rem] transition-all"
                        >
                            <Trash2 className="w-4 h-4" />
                            ÏÇ≠Ï†ú ({selectedItems.length})
                        </button>
                        <button
                            onClick={handleTransfer}
                            className="bg-[#e1f0ff] hover:bg-[#3699ff] text-[#3699ff] hover:text-white flex justify-center items-center gap-2 px-3.5 py-2 text-sm rounded-[0.5rem] transition-all"
                        >
                            <ArrowLeftRight className="w-4 h-4" />
                            Ï†ÑÏÜ° ({selectedItems.length})
                        </button>
                    </div>
                </div>
                <div className="w-full">
                    <table className="w-full text-sm">
                        <thead>
                            <tr className="border-b">
                                {/* Ï≤¥ÌÅ¨Î∞ïÏä§ Ïó¥ */}
                                <th className="w-[50px] px-4 pb-3 text-left font-normal align-middle">
                                    <input
                                        type="checkbox"
                                        className="w-4 h-4 appearance-none bg-slate-200 text-white rounded-[0.2rem] relative border-2 border-transparent checked:border-transparent checked:bg-[#3699FE] checked:before:block checked:before:content-['‚úì'] checked:before:absolute checked:before:inset-0 checked:before:text-white checked:before:flex checked:before:items-center checked:before:justify-center transition-all"
                                        checked={
                                            selectedItems.length ===
                                            tableData.length
                                        }
                                        onChange={(e) => {
                                            if (e.target.checked) {
                                                setSelectedItems(
                                                    tableData.map(
                                                        (item) => item.id
                                                    )
                                                );
                                            } else {
                                                setSelectedItems([]);
                                            }
                                        }}
                                    />
                                </th>
                                <th className="pb-3 text-left text-slate-400 font-normal">
                                    Î≥¥Ïú† Í∏àÏúµ ÏûêÏÇ∞
                                </th>
                                <th className="pb-3 text-left text-slate-400 font-normal">
                                    Î≥¥Ïú†Îüâ
                                </th>
                                <th className="pb-3 text-left text-slate-400 font-normal">
                                    Íµ¨Îß§Í∞Ä
                                </th>
                                <th className="pb-3 text-left text-slate-400 font-normal">
                                    Ï¥ù Íµ¨Îß§Í∞Ä
                                </th>
                                <th className="pb-3 text-left text-slate-400 font-normal">
                                    ÌòÑÏû¨Í∞Ä
                                </th>
                                <th className="pb-3 text-left text-slate-400 font-normal">
                                    Î∞∞ÎãπÍ∏à
                                </th>
                                <th className="pb-3 text-left text-slate-400 font-normal">
                                    Î∞∞Îãπ ÏàòÏùµÎ•†
                                </th>
                                <th className="pb-3 text-left text-slate-400 font-normal">
                                    Ï¥ù ÏàòÏùµ
                                </th>
                                <th className="pb-3 text-left text-slate-400 font-normal">
                                    ÏùºÍ∞Ñ ÏàòÏùµ
                                </th>
                                <th className="pb-3 text-left text-slate-400 font-normal"></th>
                            </tr>
                        </thead>
                        {/* ÌÖåÏù¥Î∏î Î≥∏Î¨∏ */}
                        <tbody>
                            {tableData.map((item) => {
                                // Í∞Å Îç∞Ïù¥ÌÑ∞ Ìï≠Î™©Ïóê ÎåÄÌïú ÌÜµÌôî Î≥ÄÌôò
                                const convertedPurchasePrice = convertAmount(
                                    item.purchasePrice,
                                    item.purchaseCurrency,
                                    selectedCurrency
                                );
                                const convertedTotalPurchase = convertAmount(
                                    item.totalPurchase,
                                    item.purchaseCurrency,
                                    selectedCurrency
                                );
                                const convertedCurrentPrice = convertAmount(
                                    item.currentPrice,
                                    item.purchaseCurrency,
                                    selectedCurrency
                                );
                                const convertedDividend = convertAmount(
                                    item.dividend,
                                    item.purchaseCurrency,
                                    selectedCurrency
                                );
                                const convertedTotalProfit = convertAmount(
                                    item.totalProfit,
                                    item.purchaseCurrency,
                                    selectedCurrency
                                );
                                const convertedDailyProfit = convertAmount(
                                    item.dailyProfit,
                                    item.purchaseCurrency,
                                    selectedCurrency
                                );

                                return (
                                    <tr
                                        key={item.id}
                                        className="border-b hover:bg-slate-100"
                                    >
                                        {/* Ìï≠Î™© Ï≤¥ÌÅ¨Î∞ïÏä§ */}
                                        <td className="px-4 py-3">
                                            <input
                                                type="checkbox"
                                                className="w-4 h-4 appearance-none bg-slate-200 text-white rounded-[0.2rem] relative border-2 border-transparent checked:border-transparent checked:bg-[#3699FE] checked:before:block checked:before:content-['‚úì'] checked:before:absolute checked:before:inset-0 checked:before:text-white checked:before:flex checked:before:items-center checked:before:justify-center transition-all"
                                                checked={selectedItems.includes(
                                                    item.id
                                                )}
                                                onChange={() => {
                                                    setSelectedItems((prev) =>
                                                        prev.includes(item.id)
                                                            ? prev.filter(
                                                                  (id) =>
                                                                      id !==
                                                                      item.id
                                                              )
                                                            : [...prev, item.id]
                                                    );
                                                }}
                                            />
                                        </td>
                                        {/* ÏûêÏÇ∞ Ï†ïÎ≥¥ */}
                                        <td className="py-3">
                                            <div className="flex items-center gap-2">
                                                <img
                                                    src={item.logo}
                                                    alt={`${item.name} Logo`}
                                                    className="w-6 h-6 object-contain"
                                                />
                                                <div>
                                                    <p className="font-medium text-slate-700">
                                                        {item.name}
                                                    </p>
                                                    <p className="text-xs text-slate-500">
                                                        {item.symbol}
                                                    </p>
                                                </div>
                                            </div>
                                        </td>
                                        {/* ÏàòÎüâ */}
                                        <td className="py-3 text-slate-700">
                                            {item.quantity}
                                        </td>
                                        {/* Íµ¨Îß§Í∞Ä */}
                                        <td className="py-3 text-slate-700">
                                            {formatCurrency(
                                                convertedPurchasePrice,
                                                selectedCurrency
                                            )}
                                        </td>
                                        {/* Ï¥ù Íµ¨Îß§Í∞Ä */}
                                        <td className="py-3 text-slate-700">
                                            {formatCurrency(
                                                convertedTotalPurchase,
                                                selectedCurrency
                                            )}
                                        </td>
                                        {/* ÌòÑÏû¨Í∞Ä */}
                                        <td className="py-3 text-slate-700">
                                            {formatCurrency(
                                                convertedCurrentPrice,
                                                selectedCurrency
                                            )}
                                        </td>
                                        {/* Î∞∞ÎãπÍ∏à */}
                                        <td className="py-3 text-slate-700">
                                            {formatCurrency(
                                                convertedDividend,
                                                selectedCurrency
                                            )}
                                        </td>
                                        {/* Î∞∞Îãπ ÏàòÏùµÎ•† */}
                                        <td className="py-3 text-slate-700">
                                            {item.dividendYield.toFixed(2)}%
                                        </td>
                                        {/* Ï¥ù ÏàòÏùµ */}
                                        <td
                                            className={`py-3 ${
                                                convertedTotalProfit >= 0
                                                    ? "text-[#1bc5bd]"
                                                    : "text-red-500"
                                            }`}
                                        >
                                            {convertedTotalProfit >= 0
                                                ? "+"
                                                : ""}
                                            {formatCurrency(
                                                convertedTotalProfit,
                                                selectedCurrency
                                            )}
                                        </td>
                                        {/* ÏùºÍ∞Ñ ÏàòÏùµ */}
                                        <td
                                            className={`py-3 ${
                                                convertedDailyProfit >= 0
                                                    ? "text-[#1bc5bd]"
                                                    : "text-red-500"
                                            }`}
                                        >
                                            {convertedDailyProfit >= 0
                                                ? "+"
                                                : ""}
                                            {formatCurrency(
                                                convertedDailyProfit,
                                                selectedCurrency
                                            )}
                                        </td>
                                        {/* ÎçîÎ≥¥Í∏∞ Î≤ÑÌäº */}
                                        <td className="py-3 relative">
                                            <button
                                                onClick={(e) => {
                                                    e.stopPropagation();
                                                    toggleDropdown(item.id);
                                                }}
                                                className="p-2 bg-slate-100 hover:bg-slate-200 text-gray-400 hover:text-gray-600 rounded-[0.5rem] transition-all"
                                            >
                                                <svg
                                                    xmlns="http://www.w3.org/2000/svg"
                                                    width="16"
                                                    height="16"
                                                    viewBox="0 0 256 256"
                                                >
                                                    <g>
                                                        <path
                                                            fill="#7E8299"
                                                            d="M10,128c0,13.4,10.9,24.3,24.3,24.3s24.2-10.9,24.2-24.3s-10.9-24.3-24.3-24.3S10,114.6,10,128z"
                                                        />
                                                        <path
                                                            fill="#7E8299"
                                                            d="M103.7,128c0,13.4,10.9,24.3,24.3,24.3c13.4,0,24.3-10.9,24.3-24.3s-10.9-24.3-24.3-24.3C114.6,103.7,103.7,114.6,103.7,128L103.7,128z"
                                                        />
                                                        <path
                                                            fill="#7E8299"
                                                            d="M197.5,128c0,13.4,10.9,24.3,24.3,24.3c13.4,0,24.3-10.9,24.3-24.3c0-13.4-10.9-24.3-24.3-24.3C208.3,103.7,197.5,114.6,197.5,128z"
                                                        />
                                                    </g>
                                                </svg>
                                            </button>

                                            {/* ÎìúÎ°≠Îã§Ïö¥ Î©îÎâ¥ */}
                                            {openDropdownId === item.id && (
                                                <>
                                                    <div
                                                        className="fixed inset-0"
                                                        onClick={
                                                            handleClickOutside
                                                        }
                                                    />
                                                    <div className="absolute right-0 mt-2 w-32 bg-white rounded-[0.5rem] shadow-lg z-10 py-1">
                                                        <button
                                                            onClick={() =>
                                                                handleMenuAction(
                                                                    "add",
                                                                    item.id
                                                                )
                                                            }
                                                            className="w-full text-left px-4 py-2 text-sm font-semibold text-gray-700 hover:bg-slate-100 flex items-center gap-2"
                                                        >
                                                            <Plus
                                                                className="w-4 h-4"
                                                                color="#b5b5c3"
                                                            />
                                                            Í±∞Îûò Ï∂îÍ∞Ä
                                                        </button>
                                                        <button
                                                            onClick={() =>
                                                                handleMenuAction(
                                                                    "transfer",
                                                                    item.id
                                                                )
                                                            }
                                                            className="w-full text-left px-4 py-2 text-sm font-semibold text-gray-700 hover:bg-slate-100 flex items-center gap-2"
                                                        >
                                                            <ArrowLeftRight
                                                                className="w-4 h-4"
                                                                color="#b5b5c3"
                                                            />
                                                            Ï†ÑÏÜ°
                                                        </button>
                                                        <button
                                                            onClick={() =>
                                                                handleMenuAction(
                                                                    "delete",
                                                                    item.id
                                                                )
                                                            }
                                                            className="w-full text-left px-4 py-2 text-sm font-semibold text-red-600 hover:bg-slate-100 flex items-center gap-2"
                                                        >
                                                            <Trash2 className="w-4 h-4" />
                                                            ÏÇ≠Ï†ú
                                                        </button>
                                                    </div>
                                                </>
                                            )}
                                        </td>
                                    </tr>
                                );
                            })}
                        </tbody>
                        {/* ÌÖåÏù¥Î∏î Ìë∏ÌÑ∞ (Ï¥ùÍ≥Ñ) */}
                        <tfoot className="border-t">
                            <tr>
                                <td className="py-3"></td>
                                <td className="py-3 font-medium text-slate-700">
                                    Total
                                </td>
                                <td className="py-3 font-medium text-slate-700">
                                    {totals.quantity}
                                </td>
                                <td className="py-3 font-medium text-slate-700"></td>
                                <td className="py-3 font-medium text-slate-700">
                                    {formatCurrency(
                                        totals.totalPurchase,
                                        selectedCurrency
                                    )}
                                </td>
                                <td className="py-3 font-medium text-slate-700">
                                    {formatCurrency(
                                        totals.currentPrice,
                                        selectedCurrency
                                    )}
                                </td>
                                <td className="py-3 font-medium text-slate-700">
                                    {formatCurrency(
                                        totals.dividend,
                                        selectedCurrency
                                    )}
                                </td>
                                <td className="py-3 font-medium text-slate-700">
                                    {totals.dividendYield.toFixed(2)}%
                                </td>
                                <td
                                    className={`py-3 font-medium ${
                                        totals.totalProfit >= 0
                                            ? "text-[#1bc5bd]"
                                            : "text-red-500"
                                    }`}
                                >
                                    {totals.totalProfit >= 0 ? "+" : ""}
                                    {formatCurrency(
                                        totals.totalProfit,
                                        selectedCurrency
                                    )}
                                </td>
                                <td
                                    className={`py-3 font-medium ${
                                        totals.dailyProfit >= 0
                                            ? "text-[#1bc5bd]"
                                            : "text-red-500"
                                    }`}
                                >
                                    {totals.dailyProfit >= 0 ? "+" : ""}
                                    {formatCurrency(
                                        totals.dailyProfit,
                                        selectedCurrency
                                    )}
                                </td>
                                <td className="py-3"></td>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
            <button
                onClick={() => setShowAIAdvice(!showAIAdvice)}
                className="my-4 float-end bg-[#b641ff] hover:bg-[#9736d4] text-white flex justify-center items-center gap-2 px-3.5 py-2 text-sm rounded-[0.5rem] transition-all"
            >
                <Sparkle className="w-4 h-4" />
                AI Ïª®ÏÑ§ÌÑ¥Ìä∏
            </button>

            <div
                className={`
                        clear-both w-80 transform transition-all duration-300 ease-out float-end
                        ${
                            showAIAdvice
                                ? "opacity-100 translate-y-0"
                                : "opacity-0 -translate-y-4 invisible pointer-events-none"
                        }
                    `}
            >
                <div className="relative bg-[#f8f5ff] border border-[#b641ff] p-4 rounded-[0.5rem] transform transition-all duration-300 ease-out origin-top-right animate-fade-scale">
                    <div className="absolute -top-2 right-6 w-4 h-4 bg-[#f8f5ff] border-t border-l border-[#b641ff] rotate-45 transition-transform duration-200 ease-out scale-0 animate-pop"></div>
                    <div className="flex items-start gap-2 text-[#b641ff]">
                        <MessageCircle className="w-4 h-4 mt-1 flex-shrink-0 animate-bounce" />
                        <p className="text-sm flex-grow transform transition-all duration-300 delay-150 animate-fade-up">
                            {generateAIAdvice()}
                        </p>
                    </div>
                </div>
            </div>
        </div>
    );
}
